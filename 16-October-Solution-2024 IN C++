class Solution {
public:
    string longestDiverseString(int a, int b, int c) {
        string result = "";
        std::vector<std::pair<int, char>> chars = {
            {a, 'a'}, {b, 'b'}, {c, 'c'}};
        while (true) {
            std::sort(chars.begin(), chars.end(),
                      [](const std::pair<int, char>& p1,
                         const std::pair<int, char>& p2) {
                          return p1.first > p2.first;
                      });
            bool added = false;
            for (int i = 0; i < 2; ++i) {
                if (chars[i].first > 0) {
                    int len = result.length();
                    if (len >= 2 && result[len - 1] == chars[i].second &&
                        result[len - 2] == chars[i].second) {
                        continue;
                    }
                    result += chars[i].second;
                    chars[i].first--;
                    added = true;
                    break;
                }
            }
            if (!added) {
                break;
            }
        }
        return result;
    }
};
